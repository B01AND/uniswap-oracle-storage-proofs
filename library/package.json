{
	"name": "@keydonix/uniswap-oracle",
	"description": "A general purpose price feed oracle built on Uniswap v2 that supports arbitrary time windows and donations for funding.",
	"version": "1.0.0",
	"license": "Unlicense",
	"repository": {
		"type": "git",
		"url": "git@github.com:Keydonix/uniswap-oracle.git"
	},
	"main": "output-cjs/index.js",
	"module": "output-es/index.js",
	"dependencies": {
		"@zoltu/ethereum-abi-encoder": "4.0.0"
	},
	"devDependencies": {
		"@types/node": "13.9.0",
		"@zoltu/solidity-typescript-generator": "3.1.0",
		"@zoltu/typescript-transformer-append-js-extension": "1.0.1",
		"solc": "0.6.4",
		"ts-node": "8.6.2",
		"ttypescript": "1.5.10",
		"typescript": "3.8.3"
	},
	"files": [
		"source",
		"output",
		"output-es",
		"output-cjs"
	],
	"scripts": {
		"compile-contracts": "ts-node --project scripts/tsconfig.json scripts/compile-contracts.ts",
		"build-es": "ttsc --project tsconfig-es.json",
		"build-cjs": "tsc --project tsconfig-cjs.json",
		"build": "npm run compile-contracts && npm run build-es && npm run build-cjs",
		"watch-es": "ttsc --project tsconfig-es.json --watch",
		"watch-cjs": "tsc --project tsconfig-cjs.json --watch",
		"watch": "npm run watch-cjs",
		"test": "cd ../tests && npm run test",
		"prepublishOnly": "npm run build && npm run test && node --eval \"require('fs').copyFile('../README.md', 'README.md', error => {if(error) throw error})\"",
		"postpublish": "node --eval \"require('fs').unlink('README.md', error => {if(error) throw error})\""
	}
}
